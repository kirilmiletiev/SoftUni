01. DLL

CREATE TABLE Users (
Id INT PRIMARY KEY IDENTITY,
Username NVARCHAR(30) UNIQUE NOT NULL,
[Password] NVARCHAR(50) NOT NULL,
[Name] NVARCHAR(50) ,
Gender CHAR(1) CHECK(Gender = 'M' OR Gender = 'F'), --- <<--<<--<<  CHECK(Gender IN('M', 'F'))
BirthDate Datetime,
Age INT,
Email NVARCHAR(50) NOT NULL
)


CREATE TABLE Departments (
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(50) NOT NULL,
)

CREATE TABLE Employees (
Id INT PRIMARY KEY IDENTITY,
FirstName NVARCHAR(25),
LastName NVARCHAR(25),
Gender CHAR(1)  CHECK(Gender = 'M' OR Gender = 'F'),
BirthDate Datetime,
Age INT,
DepartmentId INT NOT NULL,

CONSTRAINT FK_Employees_Departments FOREIGN KEY(DepartmentId) REFERENCES Departments(Id)
)

CREATE TABLE Categories (
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(50) NOT NULL,
DepartmentId INT ,   --- <<<---<<< NOT NULL ???

CONSTRAINT FK_Categories_Departments FOREIGN KEY(DepartmentId) REFERENCES Departments(Id)
)

CREATE TABLE Status (
Id INT PRIMARY KEY IDENTITY,
Label VARCHAR(30)
)

CREATE TABLE Reports(
Id INT NOT NULL IDENTITY ,
CategoryId INT NOT NULL,
StatusId INT NOT NULL,
OpenDate DATETIME NOT NULL,
CloseDate DATETIME,
Description NVARCHAR(200),
UserId INT NOT NULL,
EmployeeId INT,

CONSTRAINT PK_Reports PRIMARY KEY(Id),
CONSTRAINT FK_Reports_Categories FOREIGN KEY(CategoryId) REFERENCES Categories(Id),
CONSTRAINT FK_Reports_Status FOREIGN KEY(StatusId) REFERENCES Status(Id),
CONSTRAINT FK_Reports_Users FOREIGN KEY(UserId) REFERENCES Users(Id),
CONSTRAINT FK_Reports_Employees FOREIGN KEY(EmployeeId) REFERENCES Employees(Id),
)
==================================================================================================================

 02. Insert 

USE ReportService
GO
USE ReportService

INSERT INTO  Employees (FirstName, LastName, Gender, BirthDate, DepartmentId) 
	VALUES 
		('Marlo', 'O’Malley', 'M', '9/21/1958', 1),
		('Niki', 'Stanaghan', 'F', '11/26/1969', 4),
		('Ayrton', 'Senna', 'M', '03/21/1960', 9),
		('Ronnie', 'Peterson', 'M', '02/14/1944', 9),
		('Giovanna', 'Amati', 'F', '07/20/1959', 5)



INSERT INTO Reports (CategoryId, StatusId, OpenDate, CloseDate, Description, UserId, EmployeeId)
	VALUES
		(1, 1, '04/13/2017', NULL, 'Stuck Road on Str.133', 6, 2),
		(6, 3, '09/05/2015', '12/06/2015', 'Charity trail running', 3, 5),
		(14, 2, '09/07/2015', NULL, 'Falling bricks on Str.58', 5, 2),
		(4, 3, '07/03/2017', '07/06/2017', 'Cut off streetlight on Str.11', 1, 1)

====================================================================================================================

-- 03. Update 
UPDATE Reports 
	SET StatusId = 2
	WHERE StatusId = 1
--====================================================================================================================


--04. Delete 

DELETE FROM Reports
	WHERE StatusId =  4
--====================================================================================================================

-- 05.  Users by Age 

SELECT Username, Age FROM Users
	ORDER BY Age, Username DESC
--====================================================================================================================


-- 06. Unassigned Reports

SELECT r.Description, r.OpenDate FROM Reports AS r
	WHERE EmployeeId IS NULL
	ORDER BY r.OpenDate ASC, r.Description ASC
--====================================================================================================================



-- 07. Employees & Reports 
SELECT e.FirstName, e.LastName, r.Description, FORMAT(r.OpenDate, 'yyyy-MM-dd') AS 'OpenDate' FROM Employees AS e
	JOIN Reports AS r ON r.EmployeeId = e.Id
	WHERE r.EmployeeId IS NOT NULL
	ORDER BY e.Id, r.OpenDate, r.Id
--====================================================================================================================


-- 08. Most Reported Category
SELECT c.Name, COUNT(r.Id) FROM Categories AS c
	JOIN Reports AS r ON r.CategoryId = c.Id
	GROUP BY c.Name
	ORDER BY  COUNT(r.Id) DESC, c.Name ASC
--====================================================================================================================


-- 09. Employees in Category 
	SELECT c.Name, COUNT(e.Id) FROM Categories AS c
	JOIN Employees AS e ON e.DepartmentId = c.DepartmentId
	GROUP BY c.Name
	ORDER BY c.Name
--====================================================================================================================


-- 10. Users per Employee
SELECT e.FirstName + ' ' + e.LastName AS [Name], COUNT(r.UserId) AS 'Users Number' FROM Employees AS e 
	LEFT JOIN Reports AS r ON r.EmployeeId = e.Id
--	JOIN Users AS u ON u.Id  = r.UserId
	GROUP BY e.FirstName, e.LastName
	ORDER BY COUNT(r.UserId) DESC,  [Name]
--====================================================================================================================


-- 11. Emergency Patrol 
SELECT r.OpenDate, r.Description, u.Email FROM Reports AS r
	JOIN Users AS u ON r.UserId = u.Id
	WHERE r.CloseDate IS NULL
	 AND LEN(r.description) > 20 
	 AND r.Description LIKE '%str%' 
	 AND CategoryId IN (SELECT Id FROM Categories
                    WHERE DepartmentId IN (SELECT Id FROM Departments
                           WHERE Name IN ('Infrastructure', 'Emergency', 'Roads Maintenance')))
ORDER BY r.OpenDate, u.Email, r.Id

--====================================================================================================================
