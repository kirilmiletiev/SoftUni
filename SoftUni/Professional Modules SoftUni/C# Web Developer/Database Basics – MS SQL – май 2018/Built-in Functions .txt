USE SoftUni
GO

-- PROBLEM  01. Find Names of All Employees by First Name

SELECT FirstName, LastName FROM Employees WHERE FirstName LIKE 'SA%'
-- **************************************************************************

--PROBLEM 02. Find Names of All Employees by Last Name

SELECT FirstName, LastName FROM Employees WHERE LastName LIKE '%ei%'
-- **************************************************************************

-- PROBLEM 03. Find First Names of All Employess

SELECT FirstName FROM Employees WHERE DepartmentID = 3 OR DepartmentID = 10 
AND DATEPART(YEAR, HireDate) BETWEEN 1995 AND  2005 
-- **************************************************************************


--PROBLEM 04. Find All Employees Except Engineers

SELECT FirstName, LastName FROM Employees WHERE JobTitle  NOT LIKE '%engineer%'
-- **************************************************************************

--05. Find Towns with Name Length

SELECT [NAME] FROM Towns WHERE LEN(NAME)>=5 AND LEN(NAME)<=6 ORDER BY [NAME]
-- **************************************************************************


-- PROBLEM 06. Find Towns Starting With


SELECT * FROM Towns WHERE NAME LIKE 'M%' OR [Name] LIKE 'K%' OR [Name] LIKE 'B%' OR [Name] LIKE 'E%' 
ORDER BY [NAME]
-- **************************************************************************

-- PROBLEM 07. Find Towns Not Starting With
SELECT * FROM Towns WHERE LEFT(NAME,1) NOT LIKE '[RBD]' 
ORDER BY [NAME]


GO -- <-- THIS MAY NOT NEED IN JUDGE ;)

-- **************************************************************************


--PROBLEM 08. Create View Employees Hired After

CREATE VIEW V_EmployeesHiredAfter2000 AS
SELECT FirstName, LastName FROM Employees WHERE DATEPART(YEAR, HireDate) >2000


GO -- <== THIS ALSO MAY NOT NEED TO POST IN UNCLE JUDGE ;)
-- **************************************************************************

-- PROBLEM 09. Length of Last Name

SELECT FirstName, LastName FROM Employees WHERE LEN(LastName) = 5
-- **************************************************************************


-- PROBLEM 10. Countries Holding 'A'
USE Geography
GO


SELECT CountryName, IsoCode FROM Countries  WHERE CountryName LIKE '%A%A%A%' ORDER BY IsoCode
-- **************************************************************************


-- PROBLEM 11. Mix of Peak and River Names
SELECT Peaks.PeakName,
       Rivers.RiverName,
       LOWER(CONCAT(LEFT(Peaks.PeakName, LEN(Peaks.PeakName)-1), Rivers.RiverName)) AS Mix
FROM Peaks
     JOIN Rivers ON RIGHT(Peaks.PeakName, 1) = LEFT(Rivers.RiverName, 1)
ORDER BY Mix;
-- **************************************************************************


-- PROBLEM 12. Games From 2011 and 2012 Year
USE Diablo
GO


SELECT TOP(50) [NAME], FORMAT(CAST([START] AS DATE),'yyyy-MM-dd') AS [Start] FROM Games WHERE 
DATEPART(YEAR,[Start]) BETWEEN 2011 AND 2012 ORDER BY [Start], [Name]


-- **************************************************************************



-- PROBLEM 13. User Email Providers

SELECT Username, RIGHT(Email, LEN(Email)-CHARINDEX('@', Email)) AS [Email Provider]
FROM Users
ORDER BY [Email Provider], Username;
-- **************************************************************************




-- PROBLEM 14. Get Users with IPAddress Like Pattern

SELECT Username, IpAddress AS [IP Address] FROM Users
WHERE IpAddress LIKE '___.1_%._%.___' ORDER BY Username;
-- **************************************************************************



-- PROBLEM     15. Show All Games with Duration and Part of the Day

SELECT Name AS [Game],
       CASE
           WHEN DATEPART(HOUR, Start) BETWEEN 0 AND 11
           THEN 'Morning'
           WHEN DATEPART(HOUR, Start) BETWEEN 12 AND 17
           THEN 'Afternoon'
           WHEN DATEPART(HOUR, Start) BETWEEN 18 AND 23
           THEN 'Evening'
           ELSE 'N\A'
       END AS [Part of the Day],
       CASE
           WHEN Duration <= 3
           THEN 'Extra Short'
           WHEN Duration BETWEEN 4 AND 6
           THEN 'Short'
           WHEN Duration > 6
           THEN 'Long'
           WHEN Duration IS NULL
           THEN 'Extra Long'
           ELSE 'Error - must be unreachable case'
       END AS [Duration]
FROM Games
ORDER BY Name,
         [Duration],
         [Part of the Day]; 
		 

-- **************************************************************************


-- PROBLEM    16. Orders Table

SELECT ProductName,
       OrderDate,
       DATEADD(DAY, 3, OrderDate) AS [Pay Due],
       DATEADD(MONTH, 1, OrderDate)  [Deliver Due]
FROM Orders;
-- **************************************************************************