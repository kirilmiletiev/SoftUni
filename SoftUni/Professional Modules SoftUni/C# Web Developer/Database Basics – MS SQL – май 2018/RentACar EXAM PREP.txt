CREATE DATABASE RentACar
GO

USE RentACar
GO

----01. DDL

CREATE TABLE Clients(
Id INT PRIMARY KEY IDENTITY,
FirstName NVARCHAR(30) NOT NULL,
LastName NVARCHAR(30) NOT NULL,
Gender CHAR(1) CHECK (Gender IN('F', 'M')),
BirthDate DATETIME,
CreditCard NVARCHAR(30) NOT NULL,
CardValidity DATETIME,
Email NVARCHAR(50) NOT NULL
)

CREATE TABLE Towns (
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(50) NOT NULL
)

CREATE TABLE Offices (
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(40),
ParkingPlaces INT,
TownId INT NOT NULL FOREIGN KEY (TownId) REFERENCES Towns(Id)
)

CREATE TABLE Models(
Id INT PRIMARY KEY IDENTITY,
Manufacturer NVARCHAR(50) NOT NULL,
Model NVARCHAR(50) NOT NULL,
ProductionYear DATETIME,
Seats INT,
Class NVARCHAR(10),
Consumption DECIMAL(14,2)
)


CREATE TABLE Vehicles(
Id INT PRIMARY KEY IDENTITY,
ModelId INT NOT NULL FOREIGN KEY (ModelId) REFERENCES Models(Id),
OfficeId INT NOT NULL FOREIGN KEY (OfficeId) REFERENCES Offices(Id),
Mileage INT 
)

CREATE TABLE Orders(
Id INT PRIMARY KEY IDENTITY,
ClientId INT NOT NULL FOREIGN KEY (ClientId) REFERENCES Clients(Id),
TownId INT NOT NULL FOREIGN KEY (TownId) REFERENCES Towns(Id),
VehicleId INT NOT NULL FOREIGN KEY (VehicleId) REFERENCES Vehicles(Id),
CollectionDate DATETIME NOT NULL,
CollectionOfficeId INT NOT NULL FOREIGN KEY (CollectionOfficeId) REFERENCES Offices(Id),
ReturnDate DATETIME,
ReturnOfficeId INT FOREIGN KEY (ReturnOfficeId) REFERENCES Offices(Id),
Bill DECIMAL(14,2),
TotalMileage INT
)
--===========================================================================================

---02.Insert 
INSERT INTO Models (Manufacturer, Model, ProductionYear, Seats, Class, Consumption)
	VALUES
	('Chevrolet', 'Astro', '2005-07-27 00:00:00.000', 4, 'Economy', 12.60),
	('Toyota', 'Solara', '2009-10-15 00:00:00.000', 7, 'Family', 13.80),
	('Volvo', 'S40', '2010-10-12 00:00:00.000', 3, 'Average', 11.30),
	('Suzuki', 'Swift', '2000-02-03 00:00:00.000', 7, 'Economy', 16.20)

INSERT INTO Orders (ClientId, TownId, VehicleId, CollectionDate, CollectionOfficeId, ReturnDate,
							ReturnOfficeId, Bill, TotalMileage)
	VALUES
		(17, 2, 52,  '2017-08-08', 30, '2017-09-04', 42, 2360.00, 7434),
		(78, 17, 50,  '2017-04-22', 10, '2017-05-09', 12, 2326.00, 7326),
		(27, 13, 28,  '2017-04-25', 21, '2017-05-09', 34, 597.00, 1880)
--===========================================================================================
---03.Update 
UPDATE Models 
	SET Class = 'Luxury'
	WHERE Consumption > 20
--===========================================================================================


---04.Delete 
DELETE FROM Orders	
	WHERE ReturnDate IS NULL
--===========================================================================================

---05. Showroom 
SELECT m.Manufacturer, m.Model FROM  Models AS m
	ORDER BY m.Manufacturer, m.Id DESC
--===========================================================================================

---06. Y Generation 
SELECT FirstName,LastName FROM Clients
	WHERE BirthDate BETWEEN '1977' AND '1995'
	ORDER BY FirstName ASC, LastName ASC, Id ASC
--===========================================================================================


---07. Spacious Office 
SELECT t.Name, o.Name, o.ParkingPlaces FROM Offices AS o
	JOIN Towns AS t ON t.Id = o.TownId
	WHERE o.ParkingPlaces > 25
	ORDER BY t.Name, o.Id
--===========================================================================================


---08. Available Vehicles 
 SELECT m.Model, m.Seats, v.Mileage FROM Models AS m
	JOIN Vehicles AS v ON m.Id = v.ModelId
	WHERE v.Id NOT IN(
	SELECT o.VehicleId FROM Orders AS o WHERE o.ReturnDate IS NULL)
	ORDER BY v.Mileage ASC, m.Seats DESC, m.Id ASC
----===========================================================================================
---09. Offices per Town 
SELECT t.Name, COUNT(o.Id) AS 'OfficesNumber' FROM Offices AS o	
	JOIN Towns AS t ON t.Id = o.TownId
	GROUP BY t.Name
	ORDER BY COUNT(o.Id) DESC, t.Name ASC
--===========================================================================================

---10. Buyers Best Choice 
SELECT m.Manufacturer, m.Model, COUNT(o.Id) AS 'TimesOrdered' FROM Vehicles AS v
	LEFT JOIN Orders AS o ON v.Id = o.VehicleId
	LEFT JOIN Models AS m on m.Id = v.ModelId
	GROUP BY m.Manufacturer, m.Model
	ORDER BY COUNT(o.Id) DESC, m.Manufacturer DESC, m.Model ASC
--===========================================================================================

---11. Kinda Person 
--SELECT c.FirstName + ' ' + c.LastName AS 'Names', m.Class,
--DENSE_RANK() OVER (PARTITION BY c.FirstName + ' ' + c.LastName ORDER BY o.ID), COUNT(o.Id)
-- FROM Clients AS c
--	JOIN Vehicles AS v ON v.Id = c.Id
--	JOIN Orders AS o ON o.ClientId = c.Id
--	JOIN Models AS m ON m.Id = v.ModelId
--	GROUP BY  c.FirstName + ' ' + c.LastName, m.Class,
--	  (SELECT DENSE_RANK() OVER (PARTITION BY c.FirstName + ' ' + c.LastName ORDER BY o.ID)) 
--	  HAVING  DENSE_RANK() OVER (PARTITION BY c.FirstName + ' ' + c.LastName ORDER BY o.ID) = 1
--	ORDER BY c.FirstName + ' ' + c.LastName  ASC, m.Class ASC, c.Id ASC

	WITH chp AS
(SELECT
   c.FirstName + ' ' + c.LastName   AS [Name],
   m.Class                          AS [Class],
   DENSE_RANK()
   OVER ( PARTITION BY c.FirstName + ' ' + c.LastName
     ORDER BY count(m.Class) DESC ) AS rn
 FROM Clients AS c
   LEFT JOIN Orders AS o
     ON c.Id = o.ClientId
   LEFT JOIN Vehicles AS v
     ON o.VehicleId = v.Id
   LEFT JOIN Models AS m
     ON v.ModelId = m.Id
 GROUP BY c.FirstName + ' ' + c.LastName, m.Class)

SELECT
  chp.Name  AS [Name],
  chp.Class AS [Class]
FROM chp
WHERE rn = 1 AND chp.Class IS NOT NULL
ORDER BY chp.Name ASC, chp.Class ASC
	
--===========================================================================================

---12. Age Groups Revenue
SELECT
  CASE
  WHEN c.BirthDate BETWEEN '1970' AND '1980'
    THEN '70''s'
  WHEN c.BirthDate BETWEEN '1980' AND '1990'
    THEN '80''s'
  WHEN c.BirthDate BETWEEN '1990' AND '2000'
    THEN '90''s'
  WHEN c.BirthDate NOT BETWEEN '1970' AND '2000'
    THEN 'Others'
  END                 AS AgeGroup,
  SUM(o.Bill)         AS Revenue,
  AVG(o.TotalMileage) AS AverageMileage
FROM Clients AS c
  LEFT JOIN Orders AS o
    ON c.Id = o.ClientId
  JOIN Vehicles AS v
    ON o.VehicleId = v.Id
GROUP BY (CASE
          WHEN c.BirthDate BETWEEN '1970' AND '1980'
            THEN '70''s'
          WHEN c.BirthDate BETWEEN '1980' AND '1990'
            THEN '80''s'
          WHEN c.BirthDate BETWEEN '1990' AND '2000'
            THEN '90''s'
          WHEN c.BirthDate NOT BETWEEN '1970' AND '2000'
            THEN 'Others'
          END)
ORDER BY AgeGroup ASC
--===========================================================================================